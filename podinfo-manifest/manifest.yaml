---
# Source: podinfo/templates/redis/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-podinfo-redis
data:
  redis.conf: |
    maxmemory 64mb
    maxmemory-policy allkeys-lru
    save ""
    appendonly no
---
# Source: podinfo/templates/redis/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-podinfo-redis
  labels:
    app: release-name-podinfo-redis
spec:
  type: ClusterIP
  selector:
    app: release-name-podinfo-redis
  ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: redis
---
# Source: podinfo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-podinfo
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9898
      targetPort: http
      protocol: TCP
      name: http
    - port: 9999
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: release-name-podinfo
---
# Source: podinfo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-podinfo
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-podinfo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-podinfo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9898"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: podinfo
          image: "ghcr.io/stefanprodan/podinfo:6.6.0"
          imagePullPolicy: IfNotPresent
          command:
            - ./podinfo
            - --port=9898
            - --cert-path=/data/cert
            - --port-metrics=9797
            - --grpc-port=9999
            - --grpc-service-name=podinfo
            - --cache-server=tcp://release-name-podinfo-redis:6379
            - --level=info
            - --random-delay=false
            - --random-error=false
          env:
          - name: PODINFO_UI_MESSAGE
            value: "Hello of kustomize manifest"
          - name: PODINFO_UI_COLOR
            value: "#fa6607"
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
            - name: http-metrics
              containerPort: 9797
              protocol: TCP
            - name: grpc
              containerPort: 9999
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - podcli
              - check
              - http
              - localhost:9898/healthz
            initialDelaySeconds: 1
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - podcli
              - check
              - http
              - localhost:9898/readyz
            initialDelaySeconds: 1
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          volumeMounts:
          - name: data
            mountPath: /data
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
      volumes:
      - name: data
        emptyDir: {}
---
# Source: podinfo/templates/redis/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-podinfo-redis
  labels:
    app: release-name-podinfo-redis
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: release-name-podinfo-redis
  template:
    metadata:
      labels:
        app: release-name-podinfo-redis
      annotations:
        checksum/config: "6015836973cffd918ccb5cef9eda3148d60d7b72ec50fc5290de6ceebc383b93"
    spec:
      containers:
        - name: redis
          image: "redis:7.0.7"
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            - "/redis-master/redis.conf"
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 32Mi
          volumeMounts:
            - mountPath: /var/lib/redis
              name: data
            - mountPath: /redis-master
              name: config
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-podinfo-redis
            items:
              - key: redis.conf
                path: redis.conf
---
# Source: podinfo/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-podinfo
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm  
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-podinfo
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 99
---
# Source: podinfo/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-podinfo
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    dns.gardener.cloud/class: garden
    dns.gardener.cloud/dnsnames: '*.ocm-hello-world.ketos.shoot.canary.k8s-hana.ondemand.com'
    dns.gardener.cloud/ttl: "600"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  ingressClassName: 
  tls:
    - hosts:
        - "podinfo-remote-ref.ocm-hello-world.ketos.shoot.canary.k8s-hana.ondemand.com"
      secretName: 
  rules:
    - host: "podinfo-remote-ref.ocm-hello-world.ketos.shoot.canary.k8s-hana.ondemand.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-podinfo
                port:
                  number: 9898
---
# Source: podinfo/templates/tests/grpc.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-podinfo-grpc-test-7lkbe
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: grpc-health-probe
      image: stefanprodan/grpc_health_probe:v0.3.0
      command: ['grpc_health_probe']
      args:  ['-addr=release-name-podinfo.default:9999']
  restartPolicy: Never
---
# Source: podinfo/templates/tests/jwt.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-podinfo-jwt-test-yugan
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: tools
      image: giantswarm/tiny-tools
      command:
        - sh
        - -c
        - |
          TOKEN=$(curl -sd 'test' ${PODINFO_SVC}/token | jq -r .token) &&
          curl -sH "Authorization: Bearer ${TOKEN}" ${PODINFO_SVC}/token/validate | grep test
      env:
      - name: PODINFO_SVC
        value: "release-name-podinfo.default:9898"
  restartPolicy: Never
---
# Source: podinfo/templates/tests/service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-podinfo-service-test-lp2ej
  labels:
    helm.sh/chart: podinfo-6.6.0
    app.kubernetes.io/name: release-name-podinfo
    app.kubernetes.io/version: "6.6.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: curl
      image: curlimages/curl:7.69.0
      command:
        - sh
        - -c
        - |
          curl -s ${PODINFO_SVC}/api/info | grep version
      env:
        - name: PODINFO_SVC
          value: "release-name-podinfo.default:9898"
  restartPolicy: Never
